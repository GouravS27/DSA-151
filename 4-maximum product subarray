---------------c++------------------------
 int maxProduct(vector<int>& nums) {
        int maxx=nums[0];
        int prod=1;

        for(int i=0;i<nums.size();i++)
        {
            prod=prod*nums[i];

            maxx=max(prod,maxx);
            
            if(prod==0)prod=1;
        }
        prod=1;
        for(int i=nums.size()-1;i>=0;i--)
        {
            prod*=nums[i];
            maxx=max(prod,maxx);
            if(prod==0)prod=1;
        }

        return maxx;
    }

    ---------------java-----------------------------------
  public int maxProduct(int[] nums) {
       
        int maxx=nums[0];
        int prod=1;

        for(int i=0;i<nums.length;i++)
        {
            prod=prod*nums[i];

            maxx=Math.max(prod,maxx);
            
            if(prod==0)prod=1;
        }
        prod=1;
        for(int i=nums.length-1;i>=0;i--)
        {
            prod*=nums[i];
            maxx=Math.max(prod,maxx);
            if(prod==0)prod=1;
        }

        return maxx;
    }

  -----------------------Pyhton----------------------

  def maxProduct(self, nums: List[int]) -> int:
       
       
        maxx=nums[0];
        prod=1;

        for i in range(len(nums)):
            prod*=nums[i]
            maxx=max(prod,maxx)
            if prod==0 : 
                prod=1

        prod=1;
        for i in range(len(nums) - 1, -1, -1):
            prod*=nums[i]
            maxx=max(prod,maxx)
            if prod==0 : 
                prod=1

        return maxx;
